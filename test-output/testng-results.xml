<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-01T06:08:23Z" name="Default suite" finished-at="2021-03-01T06:08:29Z" duration-ms="5762">
    <groups>
    </groups>
    <test started-at="2021-03-01T06:08:23Z" name="Default test" finished-at="2021-03-01T06:08:29Z" duration-ms="5762">
      <class name="com.Sample.Test.SampleTest">
        <test-method signature="sampleTest()[pri:0, instance:com.Sample.Test.SampleTest@770c2e6b]" started-at="2021-03-01T11:38:23Z" name="sampleTest" finished-at="2021-03-01T11:38:29Z" duration-ms="5636" status="FAIL">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.util.LinkedHashSet cannot be cast to class java.util.List (java.util.LinkedHashSet and java.util.List are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.util.LinkedHashSet cannot be cast to class java.util.List (java.util.LinkedHashSet and java.util.List are in module java.base of loader 'bootstrap')
	at com.Sample.Test.SampleTest.sampleTest(SampleTest.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTest -->
        <test-method is-config="true" signature="afterMethod1()[pri:0, instance:com.Sample.Test.SampleTest@770c2e6b]" started-at="2021-03-01T11:38:29Z" name="afterMethod1" finished-at="2021-03-01T11:38:29Z" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
      </class> <!-- com.Sample.Test.SampleTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
